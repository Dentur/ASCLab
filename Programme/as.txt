load "C:\Users\Sebastian V\Documents\ASCLab\Programme\as_lab.txt";
{	
	set_marker THIS FORWARD 0;
	while((position_x != goal_x) AND (position_y != goal_y))
	{
		//Select lowest maker
		int index;
		index = 0;
		int minIndex;
		int minVal;
		minIndex = -1;
		minVal = 99999;
		while(index < get_marker_count)
		{
			int curVal; 
			curVal = get_marker index;
			if(curVal < minVal)
			{
				minVal = curVal;
				minIndex = index;
			}
			index = index + 1;
		}
		if(minIndex == -1)
		{
			print "Error: Goal cannot be reached (1)";
			break;
		}
		//Teleport to marker
		teleport minIndex;
		//Set surrounding markers
		if(look NORTH == FREE)
		{
			set_marker NORTH SOUTH minVal+1;
		}
		if(look NORTH == MARK)
		{
			if(marker_value NORTH >= 0)
			{
				if((minVal+1) < marker_value NORTH)
				{
					set_marker NORTH SOUTH minVal+1;
				}
			}
		}
		if(look EAST == FREE)
		{
			set_marker EAST WEST minVal+1;
		}
		if(look EAST == MARK)
		{
			if(marker_value EAST >= 0)
			{
				if((minVal+1) < marker_value EAST)
				{
					set_marker EAST WEST minVal+1;
				}
			}
		}
		if(look SOUTH == FREE)
		{
			set_marker SOUTH NORTH minVal+1;
		}
		if(look SOUTH == MARK)
		{
			if(marker_value SOUTH >= 0)
			{
				if((minVal+1) < marker_value SOUTH)
				{
					set_marker SOUTH NORTH minVal+1;
				}
			}
		}
		if(look WEST == FREE)
		{
			set_marker WEST EAST minVal+1;
		}
		if(look WEST == MARK)
		{
			if(marker_value WEST >= 0)
			{
				if((minVal+1) < marker_value WEST)
				{
					set_marker WEST EAST minVal+1;
				}
			}
		}
		//Remove this marker
		direction mDir;
		mDir = marker_direction THIS;
		delete_marker minIndex;
		set_marker THIS mDir -1;
		
	}
	if(position_x == goal_x)
	{
		print "Ziel gefunden";
	}
}